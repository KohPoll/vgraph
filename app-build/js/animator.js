define(["jquery","lib/Three","lib/requestAnimationFrame","lib/cancelAnimationFrame"],function(k,h,g,j){var i=function(a){this.opts=k.extend(true,{},i.opts,a);this._isRunning=false;this._actors=[];this._setupScene()};i.opts={mediator:null,container:"body",width:window.innerWidth,height:window.innerHeight,camera:{fov:75,aspect:window.innerWidth/window.innerHeight,near:1,far:10000,pos:[0,0,0]}};var l=i.prototype;l.start=function(){this._isRunning=true;this._render()};l.stop=function(){this._isRunning=false;j(this._timer)};l.isAnimated=function(){return this._isRunning==true};l.addActors=function(b){for(var c=0,a=b.length;c<a;++c){this._actors.push(b[c])}};l.getIntersects=function(d){var a=(d.clientX/this.opts.width)*2-1,c=-(d.clientY/this.opts.height)*2+1,e=new h.Vector3(a,c,0.5),b,n,f=null;this.projector.unprojectVector(e,this.camera);b=new h.Ray(this.camera.position,e.subSelf(this.camera.position).normalize());n=b.intersectObjects(this.scene.objects);return n};l._update=function(){var e=Object.prototype.hasOwnProperty,b=this.opts,a=b.mediator,c=this._actors;for(var d in c){if(e.call(c,d)){c[d]&&c[d].update&&c[d].update()}}a&&a.publish&&a.publish("actorsUpdated",this._timer)};l._render=function(){if(this._isRunning){var a=this;this._timer=g(function(b){a._render()});this._update();this.renderer.render(this.scene,this.camera)}};l._setupScene=function(){var a=this.opts;this.scene=new h.Scene();this.camera=new h.PerspectiveCamera(a.camera.fov,a.camera.aspect,a.camera.near,a.camera.far);this.camera.position=new h.Vector3(a.camera.pos[0],a.camera.pos[1],a.camera.pos[2]);this.scene.add(this.camera);this.renderer=new h.CanvasRenderer();this.renderer.setSize(a.width,a.height);k(this.opts.container).append(this.renderer.domElement);this.projector=new h.Projector()};return i});