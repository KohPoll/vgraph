define(["jquery","lib/Three","lib/requestAnimationFrame","lib/cancelAnimationFrame"],function(i,l,k,h){var g=function(a){this.opts=i.extend(true,{},g.opts,a);this._isRunning=false;this._actors=[];this._setupScene()};g.opts={mediator:null,container:"body",width:window.innerWidth,height:window.innerHeight,camera:{fov:75,aspect:window.innerWidth/window.innerHeight,near:1,far:10000,pos:[0,0,0]}};var j=g.prototype;j.start=function(){this._isRunning=true;this._render()};j.stop=function(){this._isRunning=false;h(this._timer)};j.isAnimated=function(){return this._isRunning==true};j.addActors=function(a){for(var b=0,c=a.length;b<c;++b){this._actors.push(a[b])}};j.getIntersects=function(e){var c=(e.clientX/this.opts.width)*2-1,d=-(e.clientY/this.opts.height)*2+1,f=new l.Vector3(c,d,0.5),n,b,a=null;this.projector.unprojectVector(f,this.camera);n=new l.Ray(this.camera.position,f.subSelf(this.camera.position).normalize());b=n.intersectObjects(this.scene.objects);return b};j._update=function(){var b=Object.prototype.hasOwnProperty,d=this.opts,c=d.mediator,e=this._actors;for(var a in e){if(b.call(e,a)){e[a]&&e[a].update&&e[a].update()}}c&&c.publish&&c.publish("actorsUpdated",this._timer)};j._render=function(){if(this._isRunning){var a=this;this._timer=k(function(b){a._render()});this._update();this.renderer.render(this.scene,this.camera)}};j._setupScene=function(){var a=this.opts;this.scene=new l.Scene();this.camera=new l.PerspectiveCamera(a.camera.fov,a.camera.aspect,a.camera.near,a.camera.far);this.camera.position=new l.Vector3(a.camera.pos[0],a.camera.pos[1],a.camera.pos[2]);this.scene.add(this.camera);this.renderer=new l.CanvasRenderer();this.renderer.setSize(a.width,a.height);i(this.opts.container).append(this.renderer.domElement);this.projector=new l.Projector()};return g});